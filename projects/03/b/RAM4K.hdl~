// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way16(in=in ,sel=address[0..2] ,a=ram5120 ,b=ram5121 ,c=ram5122 ,d=ram5123 ,e=ram5124 ,f=ram5125 ,g=ram5126 ,h=ram5127);
    DMux8Way(in=load ,sel=address[0..2] ,a=load0 ,b=load1 ,c=load2 ,d=load3 ,e=load4 ,f=load5 ,g=load6 ,h=load7);
    RAM512(in=ram5120 ,load=load0 ,address=address[3..11] ,out=out0);
    RAM512(in=ram5121 ,load=load1 ,address=address[3..11] ,out=out1);
    RAM512(in=ram5122 ,load=load2 ,address=address[3..11] ,out=out2);
    RAM512(in=ram5123 ,load=load3 ,address=address[3..11] ,out=out3);
    RAM512(in=ram5124 ,load=load4 ,address=address[3..11] ,out=out4);
    RAM512(in=ram5125 ,load=load5 ,address=address[3..11] ,out=out5);
    RAM512(in=ram5126 ,load=load6 ,address=address[3..11] ,out=out6);
    RAM512(in=ram5127 ,load=load7 ,address=address[3..11] ,out=out7);
    Mux8Way16(a=out0 ,b=out1 ,c=out2 ,d=out3 ,e=out4 ,f=out5 ,g=out6 ,h=out7 ,sel=address[0..2] ,out=out);

}
